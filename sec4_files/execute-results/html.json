{
  "hash": "0597b9205688e9e5b45135a76b41c0a8",
  "result": {
    "engine": "knitr",
    "markdown": "# Geospatial artificial intelligence (GeoAI) for remote sensing data\n\n## GeoAI for spatial prediction of future bushfire \n\n### Future climate data collection\n\n::: {.callout-tip title=\"Aim\"}\nWe separately collected CMIP6 datasets of temperature and precipitation for 2024 and 2030. The 2024 data will be used for model training, followed by predicting bushfire burn areas for 2030.\n:::\n\n::: {.callout-caution title=\"Description of steps\"}\n1.\tLoad NEX-GDDP-CMIP6 data from Google Earth Engine.  \n2.\tAggregate and export the temperature and precipitation data for 2024.  \n3.\tAggregate and export the temperature and precipitation data for 2030.  \n:::\n\n```js\n// Load the CMIP6 dataset\nvar dataset = ee.ImageCollection(\"NASA/GDDP-CMIP6\")\n  .filter(ee.Filter.eq('model', 'ACCESS-CM2'))  // Select climate model\n  .filter(ee.Filter.eq('scenario', 'ssp585'))  // Select SSP scenario\n  .filterBounds(roi);  // Restrict to the region of interest (ROI)\n\n// Extract variables\nvar temperature = dataset.select('tas');  // Daily mean temperature (unit: K)\nvar precipitation = dataset.select('pr');  // Daily precipitation (unit: kg m-2 s-1)\n\n// Aggregate data for 2024 and 2030\nvar tem24 = temperature.filter(ee.Filter.calendarRange(2024, 2024, 'year')).mean().clip(roi).subtract(273.15);  // Annual mean temperature for 2024 (°C)\nvar tem30 = temperature.filter(ee.Filter.calendarRange(2030, 2030, 'year')).mean().clip(roi).subtract(273.15);  // Annual mean temperature for 2030 (°C)\nvar pre24 = precipitation.filter(ee.Filter.calendarRange(2024, 2024, 'year')).sum().clip(roi).multiply(86400).multiply(365);  // Annual total precipitation for 2024 (mm)\nvar pre30 = precipitation.filter(ee.Filter.calendarRange(2030, 2030, 'year')).sum().clip(roi).multiply(86400).multiply(365);  // Annual total precipitation for 2030 (mm)\n\n// Export aggregated data to Google Drive\nExport.image.toDrive({\n  image: tem24,\n  description: 'tem24',\n  scale: 27830,\n  region: roi,\n  fileFormat: 'GeoTIFF'\n});\nExport.image.toDrive({\n  image: tem30,\n  description: 'tem30',\n  scale: 27830,\n  region: roi,\n  fileFormat: 'GeoTIFF'\n});\nExport.image.toDrive({\n  image: pre24,\n  description: 'pre24',\n  scale: 27830,\n  region: roi,\n  fileFormat: 'GeoTIFF'\n});\nExport.image.toDrive({\n  image: pre30,\n  description: 'pre30',\n  scale: 27830,\n  region: roi,\n  fileFormat: 'GeoTIFF'\n});\n```\n\n### GeoAI modelling\n\n::: {.callout-tip title=\"Aim\"}\nThe step uses the gpboost model to fit temperature and precipitation data in 2024 for the next step of spatial prediction.\n:::\n\n::: {.callout-caution title=\"Description of steps\"}\n1.\tLoad necessary libraries and data.\n2.\tRead the data containing burned area and climate data.\n3.  Process the data to fit the gpboost model.\n4.\tBuild an gpboost model.\n:::\n\nSee [here](https://towardsdatascience.com/tree-boosting-for-spatial-data-789145d6d97d/?sk=4f9924d378dbb517e883fc9c612c34f1) for more details about the gpboost model on spatio-temporal data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(terra)\npre24 = terra::rast('./data/4. GeoAI Modeling/pre24.tif')\ntem24 = terra::rast('./data/4. GeoAI Modeling/tem24.tif')\nburnedarea = terra::rast('./data/1. Data collection/BurnedArea/BurnedArea_2024.tif') |> \n  terra::resample(tem24,method = 'average')\nd24 = c(pre24,tem24,burnedarea)\nnames(d24) = c(\"pre\",\"tem\",\"burned\")\nd24 = d24 |> \n  terra::as.polygons(aggregate = FALSE) |> \n  sf::st_as_sf() |> \n  dplyr::filter(dplyr::if_all(1:3,\\(.x) !is.na(.x)))\nd24\n# Simple feature collection with 35 features and 3 fields\n# Geometry type: POLYGON\n# Dimension:     XY\n# Bounding box:  xmin: 129 ymin: -15 xmax: 131 ymax: -13.3\n# Geodetic CRS:  WGS 84\n# First 10 features:\n#       pre  tem burned                       geometry\n# 1  630364 28.7    141 POLYGON ((130 -13.5, 130 -1...\n# 2  644814 28.6    173 POLYGON ((130 -13.5, 130 -1...\n# 3  638137 28.2    178 POLYGON ((131 -13.5, 131 -1...\n# 4  597248 28.7    154 POLYGON ((130 -13.8, 130 -1...\n# 5  606609 28.5    176 POLYGON ((130 -13.8, 130 -1...\n# 6  607450 28.4    182 POLYGON ((130 -13.8, 130 -1...\n# 7  600348 28.3    193 POLYGON ((131 -13.8, 131 -1...\n# 8  568667 28.7    204 POLYGON ((130 -14, 130 -13....\n# 9  580674 28.4    164 POLYGON ((130 -14, 130 -13....\n# 10 575810 28.0    171 POLYGON ((130 -14, 130 -13....\n\nlibrary(gpboost)\ngp_model = GPModel(gp_coords = sdsfun::sf_coordinates(d24), \n                   cov_function = \"exponential\")\n# Training\nbst = gpboost(data = as.matrix(sf::st_drop_geometry(d24)[,1:2]), \n              label = as.matrix(sf::st_drop_geometry(d24)[,3,drop = FALSE]), \n              gp_model = gp_model, objective = \"regression_l2\", verbose = 0)\nbst\n# <gpb.Booster>\n#   Public:\n#     add_valid: function (data, name, valid_set_gp = NULL, use_gp_model_for_validation = TRUE) \n#     best_iter: -1\n#     best_score: NA\n#     current_iter: function () \n#     dump_model: function (num_iteration = NULL, feature_importance_type = 0L) \n#     eval: function (data, name, feval = NULL) \n#     eval_train: function (feval = NULL) \n#     eval_valid: function (feval = NULL) \n#     finalize: function () \n#     initialize: function (params = list(), train_set = NULL, modelfile = NULL, \n#     lower_bound: function () \n#     params: list\n#     predict: function (data, start_iteration = NULL, num_iteration = NULL, \n#     raw: NA\n#     record_evals: list\n#     reset_parameter: function (params, ...) \n#     rollback_one_iter: function () \n#     save: function () \n#     save_model: function (filename, start_iteration = NULL, num_iteration = NULL, \n#     save_model_to_string: function (start_iteration = NULL, num_iteration = NULL, feature_importance_type = 0L, \n#     set_train_data_name: function (name) \n#     to_predictor: function () \n#     update: function (train_set = NULL, fobj = NULL) \n#     upper_bound: function () \n#   Private:\n#     eval_names: NULL\n#     fixed_effect_train_loaded_from_file: NULL\n#     get_eval_info: function () \n#     gp_model: GPModel, R6\n#     gp_model_prediction_data_loaded_from_file: FALSE\n#     handle: gpb.Booster.handle\n#     has_gp_model: TRUE\n#     higher_better_inner_eval: NULL\n#     init_predictor: NULL\n#     inner_eval: function (data_name, data_idx, feval = NULL) \n#     inner_predict: function (idx) \n#     is_predicted_cur_iter: list\n#     label_loaded_from_file: NULL\n#     name_train_set: training\n#     name_valid_sets: list\n#     num_class: 1\n#     num_dataset: 1\n#     predict_buffer: list\n#     residual_loaded_from_file: NULL\n#     set_objective_to_none: FALSE\n#     train_set: gpb.Dataset, R6\n#     train_set_version: 1\n#     use_gp_model_for_validation: TRUE\n#     valid_sets: list\n#     valid_sets_gp: list\n```\n:::\n\n\n\n\n\n### Spatial prediction\n\n::: {.callout-tip title=\"Aim\"}\nIn this step, the gpboost model constructed in the previous step is used to predict the burned area of 2030.\n:::\n\n::: {.callout-caution title=\"Description of steps\"}\n1.\tRead the 2030 futural climate data.\n2.  Process the data to use the gpboost model to predict.\n3.\tDo spatial prediction by the gpboost model.\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npre30 = terra::rast('./data/4. GeoAI Modeling/pre30.tif')\ntem30 = terra::rast('./data/4. GeoAI Modeling/tem30.tif')\nd30 = c(pre30,tem30)\nnames(d30) = c(\"pre\",\"tem\")\nd30 = d30 |> \n  terra::as.polygons(aggregate = FALSE) |> \n  sf::st_as_sf() |> \n  dplyr::filter(dplyr::if_all(1:3,\\(.x) !is.na(.x)))\nd30\n# Simple feature collection with 37 features and 2 fields\n# Geometry type: POLYGON\n# Dimension:     XY\n# Bounding box:  xmin: 129 ymin: -15 xmax: 131 ymax: -13.3\n# Geodetic CRS:  WGS 84\n# First 10 features:\n#       pre  tem                       geometry\n# 1  652488 28.6 POLYGON ((130 -13.5, 130 -1...\n# 2  695938 28.6 POLYGON ((130 -13.5, 130 -1...\n# 3  712191 28.4 POLYGON ((130 -13.5, 130 -1...\n# 4  701452 28.1 POLYGON ((131 -13.5, 131 -1...\n# 5  682812 28.5 POLYGON ((130 -13.8, 130 -1...\n# 6  696118 28.4 POLYGON ((130 -13.8, 130 -1...\n# 7  697721 28.3 POLYGON ((130 -13.8, 130 -1...\n# 8  684002 28.2 POLYGON ((131 -13.8, 131 -1...\n# 9  671438 28.5 POLYGON ((130 -14, 130 -13....\n# 10 689152 28.3 POLYGON ((130 -14, 130 -13....\n\npred = predict(bst, data = as.matrix(sf::st_drop_geometry(d30)[,1:2]), \n               gp_coords_pred = sdsfun::sf_coordinates(d30), \n               predict_var = TRUE, pred_latent = FALSE)\n\npred\n# $fixed_effect\n# NULL\n# \n# $random_effect_mean\n# [1] NA\n# \n# $random_effect_cov\n# [1] NA\n# \n# $response_mean\n#  [1] 155 149 172 179 158 171 181 191 193 169 170 174 195 168 180 182\n# [17] 161 153 156 189 176 169 161 141 140 144 158 150 144 125 122 134\n# [33] 129 133 132 129 128\n# \n# $response_var\n#  [1] 320 133 130 135 131 127 127 130 131 127 127 127 130 133 127 127\n# [17] 127 127 130 130 127 127 127 127 130 133 127 127 127 127 130 329\n# [33] 133 130 130 130 135\n\nd30$burned = pred$response_mean\nd30\n# Simple feature collection with 37 features and 3 fields\n# Geometry type: POLYGON\n# Dimension:     XY\n# Bounding box:  xmin: 129 ymin: -15 xmax: 131 ymax: -13.3\n# Geodetic CRS:  WGS 84\n# First 10 features:\n#       pre  tem                       geometry burned\n# 1  652488 28.6 POLYGON ((130 -13.5, 130 -1...    155\n# 2  695938 28.6 POLYGON ((130 -13.5, 130 -1...    149\n# 3  712191 28.4 POLYGON ((130 -13.5, 130 -1...    172\n# 4  701452 28.1 POLYGON ((131 -13.5, 131 -1...    179\n# 5  682812 28.5 POLYGON ((130 -13.8, 130 -1...    158\n# 6  696118 28.4 POLYGON ((130 -13.8, 130 -1...    171\n# 7  697721 28.3 POLYGON ((130 -13.8, 130 -1...    181\n# 8  684002 28.2 POLYGON ((131 -13.8, 131 -1...    191\n# 9  671438 28.5 POLYGON ((130 -14, 130 -13....    193\n# 10 689152 28.3 POLYGON ((130 -14, 130 -13....    169\n```\n:::\n\n\n\n\n\n## Analysing future bushfire patterns\n\n::: {.callout-tip title=\"Aim\"}\nIn this step, the predicted burned area of 2030 is used to analyse the future bushfire patterns.\n:::\n\n::: {.callout-caution title=\"Description of steps\"}\n1.\tVisualise the predicted burned area of 2030.\n2.\tAnalyse the future bushfire patterns.\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}