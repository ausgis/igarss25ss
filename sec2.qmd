# Temporal analysis for remote sensing data

## Temporal trend analysis for bushfire

::: {.callout-tip title="Aim"}
This code is designed to compute the linear trend (slope and intercept) of burned area over time for each grid cell in a shapefile using linear regression, and save the results as a new shapefile.
:::

::: {.callout-caution title="Description of steps"}
1.	Load necessary libraries (sf for spatial data and dplyr for data manipulation).
2.	Read the shapefile containing burned area data.
3.	Extract burned area column names corresponding to years 2000-2024.
4.	Create a sequence of years as the independent variable for regression.
5.	Perform linear regression for each grid cell to estimate slope and intercept:
6.	Use lm() to fit a linear model with years as the independent variable.
7.	Extract the slope (trend of burned area change) and intercept.
8.	Remove the regression model objects to keep only numerical results.
9.	Save the updated shapefile with computed slope and intercept values.
:::

*Code (R version):*

```r
# Load necessary libraries
library(sf)
library(dplyr)

# Read the shapefile
grid <- st_read("/your_path_here/grid5_Sta.shp")

# Extract column names (ensure column order matches years)
ba_cols <- paste0("BA_", 2000:2024)  # Burned area for 25 years

# Create a sequence of years (independent variable)
years <- 2000:2024

# Compute the regression slope and intercept for each grid cell
grid <- grid %>%
  rowwise() %>%
  mutate(
    lm_model = list(lm(as.numeric(c_across(all_of(ba_cols))) ~ years)),  # Linear regression
    slope = coef(lm_model)[2],   # Slope
    intercept = coef(lm_model)[1]  # Intercept
  ) %>%
  select(-lm_model) %>%  # Remove model object
  ungroup()

# Save the new shapefile
st_write(grid, "/your_path_here/grid5_Linear.shp", delete_layer = TRUE)
```

*Code (Python version):*

```python
import geopandas as gpd
import numpy as np
from scipy.stats import linregress

# Read the Shapefile
gdf = gpd.read_file("/your_path_here/grid5_Sta.shp")

# Extract column names for the time series
years = list(range(2000, 2025))  # 2000 to 2024
columns = [f"BA_{year}" for year in years]

# Ensure all columns exist in the dataset
columns = [col for col in columns if col in gdf.columns]

# Time axis
time = np.array(years[:len(columns)])

def compute_slope(row):
    y_values = row[columns].values.astype(float)  # Retrieve the time series data for the pixel
    if np.all(np.isnan(y_values)):  # If all values are NaN, return NaN
        return np.nan
    slope, _, _, _, _ = linregress(time, y_values)
    return slope

# Compute the slope and store it in a new column
gdf["BA_slope"] = gdf.apply(compute_slope, axis=1)

# Save the results
gdf.to_file("/your_path_here/grid5_Sta_slope.shp")

print("Linear regression calculation completed, results saved.")
```

## Temporal correlation analysis between bushfire and climate
