# Remote sensing data collection

## Define study area

```{r fig-studyarea, echo=FALSE}
#| fig.cap: The location of study area, West Daly, in Australia
knitr::include_graphics("figures/study_area.jpg")
```

## Collecting bushfire data

::: {.callout-tip title="Aim"}
This code is designed to compute and export the annual burned area from the MODIS MCD64A1 dataset using Google Earth Engine (GEE).
:::

::: {.callout-caution title="Description of steps"}
1.	Load the MODIS MCD64A1 burned area dataset from GEE.
2.	Define a function to clip and export burned area data by year.
3.	Set a time range (January 1st to December 31st of the given year).
4.	Filter the dataset for the selected year and extract the burned area information.
5.	Apply an aggregation method (e.g., mean) to summarize burned area data.
6.	Clip the data to the Region of Interest (ROI).
7.	Export the processed burned area data to Google Drive as a GeoTIFF.
8.	Loop through the desired years (2000-2024) and execute the function.
:::

```js
// Load the MODIS MCD64A1 dataset
var dataset = ee.ImageCollection("MODIS/061/MCD64A1");

// Define a function to clip the dataset and export it by year
function exportYearlyBurnedArea(year) {
  // Create a date range for the specific year
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = startDate.advance(1, 'year');

  // Filter the dataset for the specific year and clip to the ROI
  var yearlyBurnedArea = dataset.filterDate(startDate, endDate)
                                .select('BurnDate')
                                .mean()  // Or use another appropriate aggregation method
                                .clip(roi.geometry().bounds());

  // Export the processed data
  Export.image.toDrive({
    image: yearlyBurnedArea,
    description: 'BurnedArea_' + year,
    scale: 500,  // Adjust resolution as needed
    region: roi,
    fileFormat: 'GeoTIFF'
  });
}

// Loop through and export data for the years 2000 to 2024
for (var year = 2000; year <= 2024; year++) {
  exportYearlyBurnedArea(year);
}
```

The GEE code link: <https://code.earthengine.google.com/d82182549c638d61a9e2ddee4e65b466> .

## Collecting climate data

- **Temperature**

::: {.callout-tip title="Aim"}
This code is designed to compute and export the annual mean temperature from the ERA5-Land Hourly Temperature dataset using GEE.
:::

::: {.callout-caution title="Description of steps"}
1.	Load ERA5 hourly temperature data from Google Earth Engine.
2.	Define a function to compute the annual mean temperature.
3.	Set a time range (January 1st to December 31st of the given year).
4.	Filter the dataset for the given year and compute the mean temperature.
5.	Convert temperature from Kelvin to Celsius.
6.	Clip the data to the ROI.
7.	Export the processed temperature data to Google Drive as a GeoTIFF.
8.	Loop through the desired years and execute the function.
:::

```js
// Load the ERA5 daily temperature dataset
var dataset = ee.ImageCollection("ECMWF/ERA5_LAND/HOURLY");

// Define a function to calculate and export the annual mean temperature
function exportYearlyTemperature(year) {
  // Create the date range
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = startDate.advance(1, 'year');

  // Filter the dataset and compute the annual mean temperature (unit: K)
  var yearlyTemperature = dataset.filterDate(startDate, endDate)
                                 .select('temperature_2m')
                                 .mean()  // Compute annual mean temperature
                                 .subtract(273.15)  // Convert to Celsius
                                 .clip(roi.geometry().bounds());

  // Export the result to Google Drive
  Export.image.toDrive({
    image: yearlyTemperature,
    description: 'Tem' + year,
    scale: 5000,  // ERA5 resolution, recommended 5km (5000m)
    region: roi,
    fileFormat: 'GeoTIFF'
  });
}

// Loop to calculate the annual mean temperature for the years 2000-2024
for (var year = 2000; year <= 2024; year++) {
  exportYearlyTemperature(year);
}
```

The GEE code link: <https://code.earthengine.google.com/7f49ceb9af5b14a83ca3b547d09ea433> .

- **Precipitation**

::: {.callout-tip title="Aim"}
This code is designed to compute and export the annual cumulative precipitation from the CHIRPS 5-day interval precipitation dataset using GEE.
:::

::: {.callout-caution title="Description of steps"}
1.	Load CHIRPS 5-day interval precipitation data from Google Earth Engine.  
2.	Define a function to compute the annual cumulative precipitation.  
3.	Set a time range (January 1st to December 31st of the given year).  
4.	Filter the dataset for the given year and compute the total precipitation.  
5.	Clip the data** to the ROI.  
6.	Export the processed precipitation data to Google Drive as a GeoTIFF.  
7.	Loop through the desired years (2000-2024) and execute the function.
:::

```js
// Load the CHIRPS dataset (5-day interval precipitation)
var dataset = ee.ImageCollection("UCSB-CHG/CHIRPS/PENTAD");

// Define a function to calculate and export the annual cumulative precipitation
function exportYearlyPrecipitation(year) {
  // Create the date range
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = startDate.advance(1, 'year');

  // Filter the dataset and compute the total precipitation for the year
  var yearlyPrecipitation = dataset.filterDate(startDate, endDate)
                                   .select('precipitation')
                                   .sum()  // Compute annual total precipitation
                                   .clip(roi.geometry().bounds());

  // Export the result to Google Drive
  Export.image.toDrive({
    image: yearlyPrecipitation,
    description: 'Pre' + year,
    scale: 5000,  // CHIRPS resolution (~5.5 km), adjustable
    region: roi,
    fileFormat: 'GeoTIFF'
  });
}

// Loop to compute annual cumulative precipitation for the years 2000-2024
for (var year = 2000; year <= 2024; year++) {
  exportYearlyPrecipitation(year);
}
```

The GEE code link: <https://code.earthengine.google.com/8e0573849ffa323cbbcd6bbf74695bed> .